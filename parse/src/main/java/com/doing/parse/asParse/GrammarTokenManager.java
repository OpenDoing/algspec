/* Generated By:JJTree&JavaCC: Do not edit this line. GrammarTokenManager.java */
package com.doing.parse.asParse;

import java.io.IOException;
import java.io.PrintStream;

/** Token Manager. */
public class GrammarTokenManager implements GrammarConstants
{

  /** Debug output. */
  public  PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x2000000000000000L) != 0L)
            return 2;
         if ((active0 & 0x8000L) != 0L)
         {
            jjmatchedKind = 64;
            return 58;
         }
         if ((active0 & 0x8000000000000000L) != 0L)
            return 89;
         if ((active0 & 0x800000000000L) != 0L)
         {
            jjmatchedKind = 64;
            return 53;
         }
         if ((active0 & 0x200000000000000L) != 0L)
         {
            jjmatchedKind = 64;
            return 218;
         }
         if ((active0 & 0x1000000000000L) != 0L)
         {
            jjmatchedKind = 64;
            return 183;
         }
         if ((active0 & 0x10000L) != 0L)
         {
            jjmatchedKind = 64;
            return 27;
         }
         return -1;
      case 1:
         if ((active0 & 0x1000000018000L) != 0L)
         {
            jjmatchedKind = 64;
            jjmatchedPos = 1;
            return 66;
         }
         if ((active0 & 0x200000000000000L) != 0L)
            return 217;
         if ((active0 & 0x800000000000L) != 0L)
            return 66;
         return -1;
      case 2:
         if ((active0 & 0x18000L) != 0L)
         {
            jjmatchedKind = 64;
            jjmatchedPos = 2;
            return 66;
         }
         if ((active0 & 0x1000000000000L) != 0L)
            return 66;
         return -1;
      case 3:
         if ((active0 & 0x10000L) != 0L)
            return 66;
         if ((active0 & 0x8000L) != 0L)
         {
            jjmatchedKind = 64;
            jjmatchedPos = 3;
            return 66;
         }
         return -1;
      case 4:
         if ((active0 & 0x8000L) != 0L)
         {
            jjmatchedKind = 64;
            jjmatchedPos = 4;
            return 66;
         }
         return -1;
      case 5:
         if ((active0 & 0x8000L) != 0L)
         {
            jjmatchedKind = 64;
            jjmatchedPos = 5;
            return 66;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 35:
         return jjStopAtPos(0, 59);
      case 40:
         return jjStopAtPos(0, 35);
      case 41:
         return jjStopAtPos(0, 36);
      case 42:
         return jjStopAtPos(0, 62);
      case 43:
         return jjStopAtPos(0, 60);
      case 44:
         return jjStopAtPos(0, 30);
      case 45:
         return jjStartNfaWithStates_0(0, 61, 2);
      case 46:
         jjmatchedKind = 58;
         return jjMoveStringLiteralDfa1_0(0x400000000L);
      case 47:
         return jjStartNfaWithStates_0(0, 63, 89);
      case 58:
         return jjStopAtPos(0, 31);
      case 59:
         return jjStopAtPos(0, 29);
      case 60:
         jjmatchedKind = 54;
         return jjMoveStringLiteralDfa1_0(0x110000000000000L);
      case 61:
         jjmatchedKind = 50;
         return jjMoveStringLiteralDfa1_0(0x8000000000000L);
      case 62:
         jjmatchedKind = 53;
         return jjMoveStringLiteralDfa1_0(0x80000000000000L);
      case 91:
         return jjStopAtPos(0, 32);
      case 93:
         return jjStopAtPos(0, 33);
      case 97:
         return jjMoveStringLiteralDfa1_0(0x1000000000000L);
      case 101:
         return jjMoveStringLiteralDfa1_0(0x8000L);
      case 105:
         return jjMoveStringLiteralDfa1_0(0x200000000000000L);
      case 111:
         return jjMoveStringLiteralDfa1_0(0x800000000000L);
      case 117:
         return jjMoveStringLiteralDfa1_0(0x10000L);
      case 123:
         return jjStopAtPos(0, 27);
      case 125:
         return jjStopAtPos(0, 28);
      default :
         return jjMoveNfa_0(1, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(IOException e) {
      jjStopStringLiteralDfa_0(0, active0, 0L);
      return 1;
   }
   switch(curChar)
   {
      case 46:
         if ((active0 & 0x400000000L) != 0L)
            return jjStopAtPos(1, 34);
         break;
      case 61:
         if ((active0 & 0x8000000000000L) != 0L)
            return jjStopAtPos(1, 51);
         else if ((active0 & 0x80000000000000L) != 0L)
            return jjStopAtPos(1, 55);
         else if ((active0 & 0x100000000000000L) != 0L)
            return jjStopAtPos(1, 56);
         break;
      case 62:
         if ((active0 & 0x10000000000000L) != 0L)
            return jjStopAtPos(1, 52);
         break;
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000000000L);
      case 114:
         if ((active0 & 0x800000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 47, 66);
         break;
      case 115:
         if ((active0 & 0x200000000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 57, 217);
         return jjMoveStringLiteralDfa2_0(active0, 0x10000L);
      case 120:
         return jjMoveStringLiteralDfa2_0(active0, 0x8000L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, 0L);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(0, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(IOException e) {
      jjStopStringLiteralDfa_0(1, active0, 0L);
      return 2;
   }
   switch(curChar)
   {
      case 100:
         if ((active0 & 0x1000000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 48, 66);
         break;
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x10000L);
      case 116:
         return jjMoveStringLiteralDfa3_0(active0, 0x8000L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, 0L);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(1, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(IOException e) {
      jjStopStringLiteralDfa_0(2, active0, 0L);
      return 3;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa4_0(active0, 0x8000L);
      case 115:
         if ((active0 & 0x10000L) != 0L)
            return jjStartNfaWithStates_0(3, 16, 66);
         break;
      default :
         break;
   }
   return jjStartNfa_0(2, active0, 0L);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(2, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(IOException e) {
      jjStopStringLiteralDfa_0(3, active0, 0L);
      return 4;
   }
   switch(curChar)
   {
      case 110:
         return jjMoveStringLiteralDfa5_0(active0, 0x8000L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, 0L);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(3, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(IOException e) {
      jjStopStringLiteralDfa_0(4, active0, 0L);
      return 5;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa6_0(active0, 0x8000L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, 0L);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(4, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(IOException e) {
      jjStopStringLiteralDfa_0(5, active0, 0L);
      return 6;
   }
   switch(curChar)
   {
      case 115:
         if ((active0 & 0x8000L) != 0L)
            return jjStartNfaWithStates_0(6, 15, 66);
         break;
      default :
         break;
   }
   return jjStartNfa_0(5, active0, 0L);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 292;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 27:
               case 66:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAdd(66);
                  break;
               case 89:
                  if (curChar == 42)
                     jjCheckNAddTwoStates(95, 96);
                  else if (curChar == 47)
                     jjCheckNAddStates(0, 2);
                  break;
               case 58:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAdd(66);
                  break;
               case 183:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAdd(66);
                  break;
               case 53:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAdd(66);
                  break;
               case 217:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAdd(66);
                  break;
               case 218:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAdd(66);
                  break;
               case 1:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 7)
                        kind = 7;
                     jjCheckNAdd(0);
                  }
                  else if (curChar == 47)
                     jjAddStates(3, 4);
                  else if (curChar == 34)
                     jjCheckNAddTwoStates(68, 69);
                  else if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 2;
                  if ((0x3fe000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(3, 4);
                  break;
               case 0:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 7)
                     kind = 7;
                  jjCheckNAdd(0);
                  break;
               case 2:
                  if ((0x3fe000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(3, 4);
                  break;
               case 3:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(3, 4);
                  break;
               case 4:
                  if (curChar == 46)
                     jjCheckNAdd(5);
                  break;
               case 5:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAdd(5);
                  break;
               case 67:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(68, 69);
                  break;
               case 68:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(68, 69);
                  break;
               case 69:
                  if (curChar == 34 && kind > 67)
                     kind = 67;
                  break;
               case 88:
                  if (curChar == 47)
                     jjAddStates(3, 4);
                  break;
               case 90:
                  if ((0xffffffffffffdbffL & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 91:
                  if ((0x2400L & l) != 0L && kind > 5)
                     kind = 5;
                  break;
               case 92:
                  if (curChar == 10 && kind > 5)
                     kind = 5;
                  break;
               case 93:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 94:
                  if (curChar == 42)
                     jjCheckNAddTwoStates(95, 96);
                  break;
               case 95:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(95, 96);
                  break;
               case 96:
                  if (curChar == 42)
                     jjAddStates(5, 6);
                  break;
               case 97:
                  if ((0xffff7fffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(98, 96);
                  break;
               case 98:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(98, 96);
                  break;
               case 99:
                  if (curChar == 47 && kind > 6)
                     kind = 6;
                  break;
               case 238:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 279:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 27:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 64)
                        kind = 64;
                     jjCheckNAdd(66);
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 58:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 64)
                        kind = 64;
                     jjCheckNAdd(66);
                  }
                  if (curChar == 110)
                     jjCheckNAdd(55);
                  break;
               case 183:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 64)
                        kind = 64;
                     jjCheckNAdd(66);
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 184;
                  else if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 182;
                  break;
               case 53:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 64)
                        kind = 64;
                     jjCheckNAdd(66);
                  }
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 217:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 64)
                        kind = 64;
                     jjCheckNAdd(66);
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 218:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 64)
                        kind = 64;
                     jjCheckNAdd(66);
                  }
                  if (curChar == 110)
                     jjCheckNAdd(206);
                  else if (curChar == 102)
                  {
                     if (kind > 24)
                        kind = 24;
                  }
                  else if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 217;
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 222;
                  if (curChar == 110)
                  {
                     if (kind > 26)
                        kind = 26;
                  }
                  break;
               case 1:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 64)
                        kind = 64;
                     jjCheckNAdd(66);
                  }
                  else if (curChar == 126)
                  {
                     if (kind > 49)
                        kind = 49;
                  }
                  if (curChar == 102)
                     jjAddStates(7, 10);
                  else if (curChar == 110)
                     jjAddStates(11, 12);
                  else if (curChar == 108)
                     jjAddStates(13, 14);
                  else if (curChar == 76)
                     jjAddStates(15, 16);
                  else if (curChar == 84)
                     jjAddStates(17, 18);
                  else if (curChar == 116)
                     jjAddStates(19, 20);
                  else if (curChar == 70)
                     jjAddStates(21, 23);
                  else if (curChar == 118)
                     jjAddStates(24, 25);
                  else if (curChar == 86)
                     jjAddStates(26, 27);
                  else if (curChar == 105)
                     jjCheckNAddStates(28, 32);
                  else if (curChar == 73)
                     jjCheckNAddStates(33, 37);
                  else if (curChar == 97)
                     jjAddStates(38, 39);
                  else if (curChar == 65)
                     jjAddStates(40, 41);
                  else if (curChar == 100)
                     jjAddStates(42, 44);
                  else if (curChar == 68)
                     jjAddStates(45, 47);
                  else if (curChar == 115)
                     jjAddStates(48, 50);
                  else if (curChar == 83)
                     jjAddStates(51, 53);
                  else if (curChar == 98)
                     jjAddStates(54, 55);
                  else if (curChar == 66)
                     jjAddStates(56, 57);
                  else if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 62;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 58;
                  else if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 56;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 53;
                  else if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 45;
                  else if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 36;
                  else if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 32;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 27;
                  else if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 6:
                  if (curChar == 101 && kind > 14)
                     kind = 14;
                  break;
               case 7:
               case 18:
                  if (curChar == 108)
                     jjCheckNAdd(6);
                  break;
               case 8:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 9:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 11:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 12:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 13:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 14:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 15:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 16:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 17:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 19:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 20:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 21:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 22:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 23:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 24:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 28:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if (curChar == 116 && kind > 17)
                     kind = 17;
                  break;
               case 30:
               case 34:
                  if (curChar == 115)
                     jjCheckNAdd(29);
                  break;
               case 31:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 32:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 35:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 36:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if (curChar == 110 && kind > 19)
                     kind = 19;
                  break;
               case 39:
               case 47:
                  if (curChar == 111)
                     jjCheckNAdd(38);
                  break;
               case 40:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 41:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 42:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 43:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 44:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 45:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 48:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 49:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 50:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 52:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 54:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 55:
                  if (curChar == 100 && kind > 20)
                     kind = 20;
                  break;
               case 56:
                  if (curChar == 110)
                     jjCheckNAdd(55);
                  break;
               case 57:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 59:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 60:
                  if (curChar == 108 && kind > 37)
                     kind = 37;
                  break;
               case 61:
               case 272:
                  if (curChar == 108)
                     jjCheckNAdd(60);
                  break;
               case 62:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 63:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 64:
                  if (curChar == 126 && kind > 49)
                     kind = 49;
                  break;
               case 65:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAdd(66);
                  break;
               case 66:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAdd(66);
                  break;
               case 68:
                  jjAddStates(58, 59);
                  break;
               case 70:
                  if (curChar == 66)
                     jjAddStates(56, 57);
                  break;
               case 71:
                  if (curChar == 110 && kind > 40)
                     kind = 40;
                  break;
               case 72:
               case 81:
                  if (curChar == 97)
                     jjCheckNAdd(71);
                  break;
               case 73:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 74:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 75:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 76:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 77:
                  if (curChar == 108 && kind > 40)
                     kind = 40;
                  break;
               case 78:
               case 86:
                  if (curChar == 111)
                     jjCheckNAdd(77);
                  break;
               case 79:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 80:
                  if (curChar == 98)
                     jjAddStates(54, 55);
                  break;
               case 82:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 81;
                  break;
               case 83:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 82;
                  break;
               case 84:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 83;
                  break;
               case 85:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 84;
                  break;
               case 87:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 90:
                  jjAddStates(0, 2);
                  break;
               case 95:
                  jjCheckNAddTwoStates(95, 96);
                  break;
               case 97:
               case 98:
                  jjCheckNAddTwoStates(98, 96);
                  break;
               case 100:
                  if (curChar == 83)
                     jjAddStates(51, 53);
                  break;
               case 101:
                  if (curChar == 99 && kind > 9)
                     kind = 9;
                  break;
               case 102:
               case 118:
                  if (curChar == 101)
                     jjCheckNAdd(101);
                  break;
               case 103:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 104:
                  if (curChar == 101 && kind > 10)
                     kind = 10;
                  break;
               case 105:
               case 120:
                  if (curChar == 114)
                     jjCheckNAdd(104);
                  break;
               case 106:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 107:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 108:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 109:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 110:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 111:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 112:
                  if (curChar == 103 && kind > 43)
                     kind = 43;
                  break;
               case 113:
               case 127:
                  if (curChar == 110)
                     jjCheckNAdd(112);
                  break;
               case 114:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 115:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 116:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 117:
                  if (curChar == 115)
                     jjAddStates(48, 50);
                  break;
               case 119:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 121:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 120;
                  break;
               case 122:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 123:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 124:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 125:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 124;
                  break;
               case 126:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 128:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 129:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 130:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 131:
                  if (curChar == 68)
                     jjAddStates(45, 47);
                  break;
               case 132:
                  if (curChar == 110 && kind > 11)
                     kind = 11;
                  break;
               case 133:
               case 154:
                  if (curChar == 111)
                     jjCheckNAdd(132);
                  break;
               case 134:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 135:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 136:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 137:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 138:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 139:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 140:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 141:
                  if (curChar == 101 && kind > 44)
                     kind = 44;
                  break;
               case 142:
               case 162:
                  if (curChar == 109)
                     jjCheckNAdd(141);
                  break;
               case 143:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 144:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 145:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 146:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 147:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 148:
                  if (curChar == 101 && kind > 45)
                     kind = 45;
                  break;
               case 149:
               case 168:
                  if (curChar == 108)
                     jjCheckNAdd(148);
                  break;
               case 150:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 151:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 152:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 153:
                  if (curChar == 100)
                     jjAddStates(42, 44);
                  break;
               case 155:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 156:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 155;
                  break;
               case 157:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 158:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 157;
                  break;
               case 159:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 160:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 161:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 163:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 164:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 165:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 166:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 167:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 169:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 170:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 171:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 172:
                  if (curChar == 65)
                     jjAddStates(40, 41);
                  break;
               case 173:
                  if (curChar == 109 && kind > 12)
                     kind = 12;
                  break;
               case 174:
               case 181:
                  if (curChar == 111)
                     jjCheckNAdd(173);
                  break;
               case 175:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 174;
                  break;
               case 176:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 177:
                  if (curChar == 114 && kind > 18)
                     kind = 18;
                  break;
               case 178:
               case 184:
                  if (curChar == 116)
                     jjCheckNAdd(177);
                  break;
               case 179:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 180:
                  if (curChar == 97)
                     jjAddStates(38, 39);
                  break;
               case 182:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 181;
                  break;
               case 185:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 186:
                  if (curChar == 73)
                     jjCheckNAddStates(33, 37);
                  break;
               case 187:
                  if (curChar == 121 && kind > 13)
                     kind = 13;
                  break;
               case 188:
                  if (curChar == 66)
                     jjCheckNAdd(187);
                  break;
               case 189:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 190:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 191:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 192:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 193:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 192;
                  break;
               case 194:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 193;
                  break;
               case 195:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 196:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 197:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 198:
                  if (curChar == 102 && kind > 24)
                     kind = 24;
                  break;
               case 199:
                  if (curChar == 110 && kind > 26)
                     kind = 26;
                  break;
               case 200:
                  if (curChar == 114 && kind > 41)
                     kind = 41;
                  break;
               case 201:
               case 219:
                  if (curChar == 101)
                     jjCheckNAdd(200);
                  break;
               case 202:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 201;
                  break;
               case 203:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 204:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 205:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 206:
                  if (curChar == 116 && kind > 41)
                     kind = 41;
                  break;
               case 207:
                  if (curChar == 110)
                     jjCheckNAdd(206);
                  break;
               case 208:
                  if (curChar == 105)
                     jjCheckNAddStates(28, 32);
                  break;
               case 209:
                  if (curChar == 98)
                     jjCheckNAdd(187);
                  break;
               case 210:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 211:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 212:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 213:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 212;
                  break;
               case 214:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 215:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 216:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 220:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 219;
                  break;
               case 221:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 220;
                  break;
               case 222:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 221;
                  break;
               case 223:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 224:
                  if (curChar == 110)
                     jjCheckNAdd(206);
                  break;
               case 225:
                  if (curChar == 86)
                     jjAddStates(26, 27);
                  break;
               case 226:
               case 231:
                  if (curChar == 97)
                     jjCheckNAdd(177);
                  break;
               case 227:
                  if (curChar == 100 && kind > 21)
                     kind = 21;
                  break;
               case 228:
               case 232:
                  if (curChar == 105)
                     jjCheckNAdd(227);
                  break;
               case 229:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 230:
                  if (curChar == 118)
                     jjAddStates(24, 25);
                  break;
               case 233:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 232;
                  break;
               case 234:
                  if (curChar == 70)
                     jjAddStates(21, 23);
                  break;
               case 235:
                  if (curChar == 108 && kind > 22)
                     kind = 22;
                  break;
               case 236:
               case 277:
               case 282:
                  if (curChar == 108)
                     jjCheckNAdd(235);
                  break;
               case 237:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 239:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 238;
                  break;
               case 240:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 241:
                  if (curChar == 101 && kind > 39)
                     kind = 39;
                  break;
               case 242:
               case 286:
                  if (curChar == 115)
                     jjCheckNAdd(241);
                  break;
               case 243:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 244:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 245:
                  if (curChar == 116 && kind > 46)
                     kind = 46;
                  break;
               case 246:
               case 289:
                  if (curChar == 97)
                     jjCheckNAdd(245);
                  break;
               case 247:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 246;
                  break;
               case 248:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 247;
                  break;
               case 249:
                  if (curChar == 116)
                     jjAddStates(19, 20);
                  break;
               case 250:
                  if (curChar == 116 && kind > 23)
                     kind = 23;
                  break;
               case 251:
               case 257:
                  if (curChar == 97)
                     jjCheckNAdd(250);
                  break;
               case 252:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 251;
                  break;
               case 253:
                  if (curChar == 101 && kind > 38)
                     kind = 38;
                  break;
               case 254:
               case 259:
                  if (curChar == 117)
                     jjCheckNAdd(253);
                  break;
               case 255:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 256:
                  if (curChar == 84)
                     jjAddStates(17, 18);
                  break;
               case 258:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 257;
                  break;
               case 260:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 259;
                  break;
               case 261:
                  if (curChar == 76)
                     jjAddStates(15, 16);
                  break;
               case 262:
                  if (curChar == 116 && kind > 25)
                     kind = 25;
                  break;
               case 263:
               case 268:
                  if (curChar == 101)
                     jjCheckNAdd(262);
                  break;
               case 264:
                  if (curChar == 103 && kind > 42)
                     kind = 42;
                  break;
               case 265:
               case 269:
                  if (curChar == 110)
                     jjCheckNAdd(264);
                  break;
               case 266:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 267:
                  if (curChar == 108)
                     jjAddStates(13, 14);
                  break;
               case 270:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 269;
                  break;
               case 271:
                  if (curChar == 110)
                     jjAddStates(11, 12);
                  break;
               case 273:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 272;
                  break;
               case 274:
                  if (curChar == 116 && kind > 49)
                     kind = 49;
                  break;
               case 275:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 274;
                  break;
               case 276:
                  if (curChar == 102)
                     jjAddStates(7, 10);
                  break;
               case 278:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 277;
                  break;
               case 280:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 281:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 280;
                  break;
               case 283:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 282;
                  break;
               case 284:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 283;
                  break;
               case 285:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 287:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 286;
                  break;
               case 288:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 287;
                  break;
               case 290:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 289;
                  break;
               case 291:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 290;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 68:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(58, 59);
                  break;
               case 90:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(0, 2);
                  break;
               case 95:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(95, 96);
                  break;
               case 97:
               case 98:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(98, 96);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 292 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   90, 91, 93, 89, 94, 97, 99, 281, 285, 288, 291, 273, 275, 268, 270, 263,
   266, 258, 260, 252, 255, 240, 244, 248, 231, 233, 226, 229, 218, 198, 199, 223,
   224, 197, 198, 199, 205, 207, 183, 185, 176, 179, 161, 167, 171, 140, 147, 152,
   119, 126, 130, 103, 111, 116, 85, 87, 76, 79, 68, 69,
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default :
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null,
null, null, "\145\170\164\145\156\144\163", "\165\163\145\163", null, null, null,
null, null, null, null, null, null, null, "\173", "\175", "\73", "\54", "\72",
"\133", "\135", "\56\56", "\50", "\51", null, null, null, null, null, null, null, null,
null, null, "\157\162", "\141\156\144", null, "\75", "\75\75", "\74\76", "\76",
"\74", "\76\75", "\74\75", "\151\163", "\56", "\43", "\53", "\55", "\52", "\57", null,
null, null, null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};
static final long[] jjtoToken = {
   0xffffffffffffff81L, 0x9L,
};
static final long[] jjtoSkip = {
   0x7eL, 0x0L,
};
protected JavaCharStream input_stream;
private final int[] jjrounds = new int[292];
private final int[] jjstateSet = new int[584];
protected char curChar;
/** Constructor. */
public GrammarTokenManager(JavaCharStream stream){
   if (JavaCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
public GrammarTokenManager(JavaCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(JavaCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 292; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(JavaCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken()
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   try { input_stream.backup(0);
      while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
         curChar = input_stream.BeginToken();
   }
   catch (IOException e1) { continue EOFLoop; }
   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         return matchedToken;
      }
      else
      {
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
